services:
    # bot-bas:
    #     container_name: bot-bas
    #     depends_on: 
    #         migrator-bas:
    #             condition: service_completed_successfully
    #     build:
    #         context: ../
    #         dockerfile: ./src/Dockerfile
    #     restart: always
    #     ports: 
    #         - "3012:3012"
    #     networks:
    #         - postgres-bas
    #         - redis-bas
        # env_file:
        #     - bot.env

    postgres:
        container_name: PgDBRegSysEvents
        hostname: postgres
        image: postgres:17.4-alpine3.20
        env_file:
            - db.env
        ports:
            - "5434:5432"
        volumes:
            - dataRegSysEvents:/var/lib/postgresql/regSysEvents/data
        # healthcheck:
        #     test: ["CMD-SHELL", "pg_isready -U puser -d artworks"]
        #     interval: 30s
        #     timeout: 30s
        #     retries: 3
        #     start_period: 60s
        networks:
            - postgres-db

    # db-bas:
    #     container_name: db-bas
    #     hostname: db-bas
    #     image: postgres:17.4-alpine3.20
    #     command:
    #         - "postgres"
    #     # env_file:
    #     #     - postgres.env
    #     volumes:
    #         - ../data/db-data:/var/lib/postgresql/data
    #     ports:
    #         - "5432:5432"
    #     restart: always
    #     deploy:
    #         resources:
    #             limits:
    #                 cpus: '1'
    #                 memory: 4G
    #     networks:
    #         - postgres-bas

    # migrator-bas:
    #     container_name: migrator-bas
    #     depends_on: 
    #         db-bas:
    #             condition: service_started
    #     # env_file:
    #     #     - migrator.env
    #     build:
    #         context: ../migrations
    #         dockerfile: Dockerfile
    #     networks:
    #         - postgres-bas
    
    # redis-bas:
    #     container_name: redis-bas
    #     hostname: redis-bas
    #     restart: unless-stopped
    #     build:
    #         context: ./
    #         dockerfile: ./Dockerfile
    #     # env_file:
    #     #     - redis.env
    #     networks:
    #         - redis-bas

volumes:  
    dataRegSysEvents: 

networks:
    postgres-db:
        name: postgres-db
